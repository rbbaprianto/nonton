name: Deploy Nonton

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Fly
        uses: superfly/flyctl-actions@v2
        with:
          flyctl-version: "latest"

      - name: Create App
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          if ! flyctl apps list | grep -q "nonton"; then
            flyctl apps create nonton \
              --name nonton \
              --org personal
          fi
          echo "primary_region = \"sin\"" >> fly.toml

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --app nonton --remote-only --verbose

  cleanup:
    needs: deploy
    runs-on: ubuntu-24.04
    steps:
      - name: Cleanup Workflows
        uses: actions/github-script@v7
        with:
          script: |
            const { data: runs } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: context.workflow,
              per_page: 100
            });
            
            const keep = 5;
            const toDelete = runs.workflow_runs.slice(keep);
            
            for (const run of toDelete) {
              await github.rest.actions.deleteWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: run.id
              });
              console.log(`Deleted run ${run.id}`);
            }
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}